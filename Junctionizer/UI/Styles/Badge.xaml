<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Junctionizer.UI.Styles"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <SineEase EasingMode="EaseOut" x:Key="BadgeEase" />

    <Style TargetType="{x:Type materialDesign:Badged}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BadgeColorZoneMode" Value="Standard" />
        <Setter Property="BadgePlacementMode" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type materialDesign:Badged}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Border x:Name="PART_BadgeContainer"
                                CornerRadius="9" Background="{TemplateBinding BadgeBackground}"
                                MinWidth="18" MinHeight="18"
                                HorizontalAlignment="Left" VerticalAlignment="Top" Padding="2"
                                TextElement.FontSize="11"
                                TextElement.FontWeight="DemiBold"
                                RenderTransformOrigin=".5,.5"
                                Visibility="{TemplateBinding IsBadgeSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border.Resources>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Setter Property="Width" Value="12" />
                                    <Setter Property="Height" Value="12" />
                                </Style>
                            </Border.Resources>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="BadgeScaleTransform" ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>
                            <ContentControl Foreground="{TemplateBinding BadgeForeground}"
                                            IsTabStop="False"
                                            Focusable="False"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Margin="1 0 1 0"
                                            Content="{TemplateBinding Badge}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<EventTrigger RoutedEvent="BadgeChanged">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BadgeScaleTransform" Storyboard.TargetProperty="ScaleX">
                                            <EasingDoubleKeyFrame Value="1.4" KeyTime="0" />
                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" EasingFunction="{StaticResource BadgeEase}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BadgeScaleTransform" Storyboard.TargetProperty="ScaleY">
                                            <EasingDoubleKeyFrame Value="1.4" KeyTime="0" />
                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" EasingFunction="{StaticResource BadgeEase}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>-->
                        <Trigger Property="BadgePlacementMode" Value="TopLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Top">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="TopRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Right">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomRight">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Bottom">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="BottomLeft">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                        </Trigger>
                        <Trigger Property="BadgePlacementMode" Value="Left">
                            <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="BadgeColorZoneMode" Value="Standard">
                <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignPaper}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignBody}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="Inverted">
                <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignPaper}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="PrimaryLight">
                <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueLightBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueLightForegroundBrush}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="PrimaryMid">
                <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="PrimaryDark">
                <Setter Property="BadgeBackground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="Accent">
                <Setter Property="BadgeBackground" Value="{DynamicResource SecondaryAccentBrush}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource SecondaryAccentForegroundBrush}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="Light">
                <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignLightBackground}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignLightForeground}" />
            </Trigger>
            <Trigger Property="BadgeColorZoneMode" Value="Dark">
                <Setter Property="BadgeBackground" Value="{DynamicResource MaterialDesignDarkBackground}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource MaterialDesignDarkForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>