<Window x:Class="GameMover.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:GameMover.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:ui="clr-namespace:GameMover.UI"
        xmlns:columns="clr-namespace:GameMover.UI.Columns"
        xmlns:customWpfComponents="clr-namespace:GameMover.CustomWpfComponents"
        xmlns:placeholderText="clr-namespace:GameMover.CustomWpfComponents.PlaceholderText"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:valueConverters="clr-namespace:GameMover.ValueConverters"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Title="Game Mover"
        Width="750"
        Height="450"
        MinWidth="600"
        MinHeight="400"
        mc:Ignorable="d">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>

    <materialDesign:DialogHost OpenDialogCommandDataContextSource="DialogHostInstance" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <i:Interaction.Triggers>
            <prism:InteractionRequestTrigger SourceObject="{Binding DisplayFindJunctionsDialogRequest}">
                <i:InvokeCommandAction Command="{x:Static ui:MainWindow.OpenDialogCommand}">
                    <i:InvokeCommandAction.CommandParameter>
                        <ui:FindExistingJunctionsDialog />
                    </i:InvokeCommandAction.CommandParameter>
                </i:InvokeCommandAction>
            </prism:InteractionRequestTrigger>

            <prism:InteractionRequestTrigger SourceObject="{Binding CloseDialogRequest}">
                <i:InvokeCommandAction Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" />
            </prism:InteractionRequestTrigger>

            <i:EventTrigger EventName="DialogClosing">
                <prism:InvokeCommandAction Command="{Binding DialogClosedCommand}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <DockPanel>
            <Menu DockPanel.Dock="Top" Height="36">
                <MenuItem Header="_File" Height="36">
                    <MenuItem Header="_Search Existing Junctions"
                              Command="{Binding FindExistingJunctionsCommand}" />
                    <Separator />
                    <MenuItem Header="_Refresh" Command="{Binding RefreshFoldersCommand}" />
                    <MenuItem Header="Hide Destination"
                              IsCheckable="True"
                              Checked="HideDestination"
                              Unchecked="ShowDestination" />
                </MenuItem>
            </Menu>
            <DockPanel Dock="Top">
                <Button Command="{Binding DeleteCurrentLocationCommand}" DockPanel.Dock="Right">Delete</Button>
                <Button Command="{Binding SaveCurrentLocationCommand}" DockPanel.Dock="Right">Save Current</Button>
                <ComboBox DockPanel.Dock="Left"
                          Margin="10 3 10 3"
                          ItemsSource="{Binding DisplayedMappings}"
                          SelectedItem="{Binding SelectedMapping, Mode=TwoWay}">

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <materialDesign:PackIcon Visibility="{Binding IsSavedMapping, Converter={StaticResource BooleanToVisibilityConverter}}" Kind="Star" />
                                <ContentPresenter Content="{Binding}" />
                            </DockPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <ComboBox.Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DisplayedMappings.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayedMappings.Count}" Value="1">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding DisplayedMappings.Count}" Value="1" />
                                        <Condition Binding="{Binding SelectedMapping}" Value="{x:Null}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </DockPanel>
            <Grid DockPanel.Dock="Top">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Margin="15 0" Text="{Binding FilterNameText, UpdateSourceTrigger=PropertyChanged}">
                    <placeholderText:WatermarkService.Watermark>
                        <TextBlock>Name filter</TextBlock>
                    </placeholderText:WatermarkService.Watermark>
                </TextBox>
                <DockPanel Grid.Column="1"  Margin="15 0">
                    <TextBlock Margin="0 0 5 0">Size Filter</TextBlock>
                    <controls:RangeSlider
                        ToolTipService.Placement="MousePoint"
                        ToolTip="Drag the handles to change what is displayed"
                        Style="{StaticResource MaterialDesignRangeSlider}"
                        Minimum="{x:Static valueConverters:LogScaleConverter.MINIMUM_EXPONENT}"
                        Maximum="{x:Static valueConverters:LogScaleConverter.MAXIMUM_EXPONENT}"
                        MinRangeWidth="1"
                        ExtendedMode="True"
                        MoveWholeRange="False"
                        IsMoveToPointEnabled="True"
                        IsSnapToTickEnabled="False"
                        AutoToolTipPlacement="TopLeft"
                        AutoToolTipTextConverter="{StaticResource LogScaleTooltipConverter}"
                        LowerValue="{Binding FilterLowerSizeLimit, Mode=TwoWay, Converter={StaticResource LogScaleConverter}}"
                        UpperValue="{Binding FilterUpperSizeLimit, Mode=TwoWay, Converter={StaticResource LogScaleConverter}}" />
                </DockPanel>
            </Grid>
            <DockPanel DockPanel.Dock="Top">
            </DockPanel>
            <Grid Margin="10 5 10 10" DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition x:Name="destinationColumnDefinition" Width="0.5*" />
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0" DataContext="{Binding SourceCollection}">
                    <DockPanel HorizontalAlignment="Center"
                               DockPanel.Dock="Top"
                               LastChildFill="False">
                        <Button Command="{Binding SelectLocationCommand}" Content="Select Source Folder" />
                    </DockPanel>

                    <DockPanel Margin="0,5,0,0"
                               HorizontalAlignment="Center"
                               DockPanel.Dock="Bottom">
                        <Button Command="{Binding SelectFoldersNotInOtherPaneCommand}" Content="Select Not In Destination" />
                    </DockPanel>

                    <DockPanel HorizontalAlignment="Center"
                               DockPanel.Dock="Bottom"
                               LastChildFill="False">
                        <TextBlock Text="{Binding SelectedItems.Count}" />
                        <Button Command="{Binding CopySelectedCommand}" Content="Copy -&gt;" />
                        <Button Command="{Binding DeleteSelectedFoldersCommand}" Content="Delete" />
                        <Button Command="{Binding DeleteSelectedJunctionsCommand}" Content="Delete Junction" />
                        <Button Command="{Binding ArchiveSelectedCommand}" Content="Archive -&gt;" />
                    </DockPanel>
                    <customWpfComponents:MultiSelectDataGrid x:Name="sourceGrid"
                                              SelectedItemsList="{Binding SelectedItems}"
                                              CellStyle="{StaticResource CustomCellStyle}"
                                              Style="{StaticResource GameFolderDataGridStyle}">
                        <DataGrid.Columns>
                            <columns:NameColumn />
                            <columns:SizeColumn />
                            <columns:JunctionTargetColumn />
                            <columns:LastUpdated />
                        </DataGrid.Columns>
                    </customWpfComponents:MultiSelectDataGrid>
                </DockPanel>


                <DockPanel Grid.Column="1" DataContext="{Binding DestinationCollection}">
                    <DockPanel HorizontalAlignment="Center"
                               DockPanel.Dock="Top">
                        <Button Command="{Binding SelectLocationCommand}" Content="Select Destination Folder" />
                    </DockPanel>

                    <DockPanel Margin="0,5,0,0"
                               HorizontalAlignment="Center"
                               DockPanel.Dock="Bottom">
                        <Button Command="{Binding SelectFoldersNotInOtherPaneCommand}" Content="Select Not In Source" />
                    </DockPanel>

                    <DockPanel HorizontalAlignment="Center"
                               DockPanel.Dock="Bottom"
                               LastChildFill="False">
                        <TextBlock Text="{Binding SelectedItems.Count}" />
                        <Button Command="{Binding CopySelectedCommand}" Content="&lt;- Copy" />
                        <Button Command="{Binding CreateSelectedJunctionCommand}" Content="&lt;- Create Junction" />
                        <Button Command="{Binding DeleteSelectedFoldersCommand}" Content="Delete" />
                    </DockPanel>

                    <customWpfComponents:MultiSelectDataGrid x:Name="destinationGrid"
                                              SelectedItemsList="{Binding SelectedItems}"
                                              CellStyle="{StaticResource CustomCellStyle}"
                                              Style="{StaticResource GameFolderDataGridStyle}">
                        <DataGrid.Columns>
                            <columns:NameColumn />
                            <columns:SizeColumn />
                            <columns:LastUpdated />
                        </DataGrid.Columns>
                    </customWpfComponents:MultiSelectDataGrid>
                </DockPanel>
            </Grid>
        </DockPanel>
    </materialDesign:DialogHost>
</Window>